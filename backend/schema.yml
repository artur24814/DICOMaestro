openapi: 3.0.3
info:
  title: DICOMaestro API
  version: 0.0.0
  description: "\n        Free, open-source application for viewing DICOM images and\
    \ sequences, exploring metadata,\n        and creating custom DICOM files via\
    \ an API for developers.\n        "
paths:
  /api/auth/register/:
    post:
      operationId: api_auth_register_create
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/developer/auth/api-keys/:
    get:
      operationId: api_developer_auth_api_keys_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeveloperApiKey'
          description: ''
    post:
      operationId: api_developer_auth_api_keys_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeveloperApiKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeveloperApiKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeveloperApiKey'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeveloperApiKey'
          description: ''
    delete:
      operationId: api_developer_auth_api_keys_destroy
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/developer/auth/api-keys/delete/{id}/:
    get:
      operationId: api_developer_auth_api_keys_delete_list
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeveloperApiKey'
          description: ''
    post:
      operationId: api_developer_auth_api_keys_delete_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeveloperApiKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeveloperApiKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeveloperApiKey'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeveloperApiKey'
          description: ''
    delete:
      operationId: api_developer_auth_api_keys_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/developer/profiles/:
    get:
      operationId: api_developer_profiles_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeveloperProfile'
          description: ''
    post:
      operationId: api_developer_profiles_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeveloperProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeveloperProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeveloperProfile'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeveloperProfile'
          description: ''
  /api/developer/profiles/activity-summary/:
    get:
      operationId: api_developer_profiles_activity_summary_list
      parameters:
      - in: query
        name: timestamp__month
        schema:
          type: number
        description: Month
      - in: query
        name: timestamp__year
        schema:
          type: number
        description: Year
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeveloperActivityLog'
          description: ''
  /api/dicom-format/allowed-fields/:
    get:
      operationId: api_dicom_format_allowed_fields_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/dicom/read/file/:
    post:
      operationId: api_dicom_read_file_create
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
components:
  schemas:
    BlankEnum:
      enum:
      - ''
    CustomTokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    DeveloperActivityLog:
      type: object
      properties:
        day:
          type: string
          format: date
        count:
          type: integer
      required:
      - count
      - day
    DeveloperApiKey:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          description: A free-form name for the API key. Need not be unique. 50 characters
            max.
          maxLength: 50
        created:
          type: string
          format: date-time
          readOnly: true
        revoked:
          type: boolean
          description: If the API key is revoked, clients cannot use it anymore. (This
            cannot be undone.)
        expiry_date:
          type: string
          format: date-time
          nullable: true
          title: Expires
          description: Once API key expires, clients cannot use it anymore.
      required:
      - created
      - id
    DeveloperProfile:
      type: object
      properties:
        purpose:
          nullable: true
          description: |-
            Purpose for registering as a developer

            * `testing` - Building a test application
            * `research` - Conducting research
            * `education` - Learning/education
            * `commercial` - Commercial purposes
            * `other` - Other
          oneOf:
          - $ref: '#/components/schemas/PurposeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        organization:
          type: string
          nullable: true
          description: Organization name, if any
          maxLength: 255
    NullEnum:
      enum:
      - null
    PurposeEnum:
      enum:
      - testing
      - research
      - education
      - commercial
      - other
      type: string
      description: |-
        * `testing` - Building a test application
        * `research` - Conducting research
        * `education` - Learning/education
        * `commercial` - Commercial purposes
        * `other` - Other
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
